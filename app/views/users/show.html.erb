<head>
  <style>
.animation{
  width:100%;
  height:300px;
  position:fixed;
  bottom:0;
  right:0;
  transform: translateX(calc(20% + 10px));
}
/*フォント*/
.bound span{
  font-family: Consolas, 'Courier New', Courier, Monaco, monospace;
  position: absolute;
  left: 0;
  right: 0;
  top:0;
  bottom: 0px;
  margin: auto;
  font-size:5em;
  font-weight:bold;
  color:#0091EA;
  text-align:center;
  width:100px;
  height:100px;
}


/*アニメーション指定
文字数に合わせてleftや開始時間（2つ目のs）を設定する*/
.bound span:nth-child(1){ left:-4.2em; animation: bound-anim 0.8s 0.0s infinite;}
.bound span:nth-child(2){ left:-2.8em; animation: bound-anim 0.8s 0.1s infinite;}
.bound span:nth-child(3){ left:-1.4em; animation: bound-anim 0.8s 0.2s infinite;}

.bound span:nth-child(4){ left: 0.0em; animation: bound-anim 0.8s 0.3s infinite;}

.bound span:nth-child(5){ left: 1.4em; animation: bound-anim 0.8s 0.4s infinite;}

.bound span:nth-child(6){ left: 2.8em; animation: bound-anim 0.8s 0.5s infinite;}

.bound span:nth-child(7){ left: 4.2em; animation: bound-anim 0.8s 0.6s infinite;}

.bound span:nth-child(8){ left: 6.0em; animation: bound-anim 0.8s 0.7s infinite;}
/*アニメーションキーフレーム
小さいフォントサイズの場合はtopの数値も縮小すると飛び過ぎない*/
@keyframes bound-anim {
  0%,100% {top: 0;transform: scale(1);}
  30% {top: -25%;}
  50% {transform: scale(1);}
  90% {top: 0;transform: scale(1.2,0.8);}
}
  </style>
</head>

<div class="loading">
  <div class="loading-animation">テスト</div>
  <div class="container animation">
  <p class="bound">
    <span>l</span>
    <span>o</span>
    <span>a</span>
    <span>d</span>
    <span>i</span>
    <span>n</span>
    <span>g</span>
    <span>
    <i class="fa-solid fa-suitcase-rolling"></i>
    </span>
  </p>
</div>
</div>

<script>
$(function () {
  var webStorage = function () {
    if (sessionStorage.getItem('access')) {
      /*
        2回目以降アクセス時の処理
      */
      $(".loading").addClass('is-active');
    } else {
      /*
        初回アクセス時の処理
      */
      sessionStorage.setItem('access', 'true'); // sessionStorageにデータを保存
      $(".loading-animation").addClass('is-active'); // loadingアニメーションを表示
      setTimeout(function () {
        // ローディングを数秒後に非表示にする
        $(".loading").addClass('is-active');
        $(".loading-animation").removeClass('is-active');
      }, 3000); // ローディングを表示する時間
    }
  }
  // ログアウト時にsessionStorageの"access"キーを削除
  var logout = function () {
    sessionStorage.removeItem('access');
  }
  webStorage();
  logout();
});
</script>



<div class='container main-content' style="width: 90%">
  <div class="row mt-3">
    <div class="col">
      <%= image_tag @user.get_profile_image, class: "rounded-circle", size: '100x100' %>
    </div>
    <div class="col-11">
      <h4>
        <%= @user.name %>さんの部屋
        <% if current_user != @user && current_user.following?(@user) && @user.following?(current_user) %>
          <%= link_to chat_path(@user.id), class: "btn btn-outline-success rounded-pill mb-2" do %>
          <i class="fa-regular fa-comments"></i>&nbsp;&nbsp;chatを始める
          <% end %>
        <% end %>
        &nbsp;&nbsp;
        <% if current_user && @user.name == current_user.name %>
          <%= link_to edit_user_path(current_user), method: :get, class: "btn btn-outline-success rounded-pill" do %>
          <i class="fa-regular fa-address-card"></i>&nbsp;&nbsp;プロフィールを編集
          <% end %>
        <% end %>
      </h4>
      <p class="rounded">
        <%= @user.body %>
      </p>
    </div>
  </div>
  <div class="row my-3" style="border-bottom-width: 5px; border-bottom-style: solid; border-bottom-color: #b0c4de;">
    <h3 class="col-9"><%= @user.name %>さんの旅一覧</h3>
    <div class="col">
      <%= link_to new_travel_path, class: 'btn btn-outline-success rounded-pill' do %>
      <i class="fa-solid fa-plus"></i>&nbsp;&nbsp;新しく投稿する
      <% end %>
    </div>
  </div>
  <%= render 'travels/index', travels: @travels %>
  <%= paginate @travels %>
</div>